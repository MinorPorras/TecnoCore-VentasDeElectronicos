@using System.Security.Claims;
@using Inventario_Productos_Tecnologicos.Models.ViewModels
@{
    var userId = User.FindFirstValue(ClaimTypes.NameIdentifier) ?? string.Empty;
}
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>@ViewData["Title"] - TecnoCore</title>
    <script type="importmap"></script>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css"/>
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true"/>
    <link rel="stylesheet" href="~/css/navBar.css"/>
</head>
<body>
<header>
    <nav>
        <div class="nav-principal">
            <a asp-action="Index" asp-controller="Home" class="Logo">
                <img src="~/img/LightLogo.png" alt="Tecno_Core Logo" class="imgLogo"/>
            </a>
            <ul>
                @if (User.Identity.IsAuthenticated)
                {
                    if (User.IsInRole("Administrador"))
                    {
                        <li><a asp-action="Mantenimiento" asp-controller="Home">Mantenimiento</a></li>
                    }
                }
                <li><a asp-action="index" asp-controller="Home">Inicio</a></li>
                @await Component.InvokeAsync("Categories")
            </ul>
            @if (User.Identity is { IsAuthenticated: true })
            {
                <a class="nav-account tooltipContainer btnAccount" asp-controller="Account"
                   asp-action="Informacion_personal"
                   asp-route-id="@userId">
                    <img
                        src="~/img/ICO_User.svg"
                        alt="cuenta"
                        class="nav-icon"
                        id="user-account"/>
                    <span class="TooltipText">@User.Identity.Name</span>
                </a>
                <a class="nav-account tooltipContainer btnLogOut" asp-action="Logout" asp-controller="Account">
                    <img
                        src="~/img/ICO_Logout.svg"
                        alt="cuenta"
                        class="nav-icon"
                        id="user-account"/>
                    <span class="TooltipText">Cerrar Sesión</span>
                </a>
            }
            else
            {
                <a class="nav-account tooltipContainer btnAccount" asp-action="Login" asp-controller="Account">
                    <img
                        src="~/img/ICO_User.svg"
                        alt="cuenta"
                        class="nav-icon"
                        id="user-account"/>
                    <span class="TooltipText">Iniciar Sesión</span>
                </a>
            }
        </div>
        <form asp-action="ListaProductos" asp-controller="Productos" method="get" class="search-bar">
            <input type="text"
                   placeholder="Nombre del producto"
                   class="search-input"
                   id="searchTerm"
                   name="SearchTerm"
                   value="@ViewBag.CurrentSearch"
            />
            <button class="button-78" role="button">Buscar</button>

            <div class="nav-cart">
                <div id="showCart" class="btnCarrito tooltipContainer">
                    <img
                        src="~/img/ICO_Cart.svg"
                        alt="compras"
                        class="nav-cart-icon"
                        id="shopping-cart"/>
                    <span class="TooltipText">Carrito de compras</span>
                </div>
                <label for="shopping-cart">₡ 0.00</label>
            </div>
        </form>
    </nav>
</header>
<div class="main_container">
    <div id="alertContainer"></div>
    <main>
        @RenderBody()
    </main>
</div>

<dialog id="CarritoModal">
    <div class="modalContent">
        <h2>Carrito de compras</h2>
        <div class="Cart-header">
            <p>Productos en el carrito: <span id="cart-item-count">0</span></p>
            <button class="btnClearCart">Vaciar carrito</button>
        </div>
        <div id="cart-item-container">
        </div>
        <p>Total: ₡ 0.00</p>
        <div class="form-group">
            <button type="button" class="btnClose" id="closeCart">Cerrar</button>
            <a class="btnEndCompra" asp-action="Carro_Compras" asp-controller="Ventas">Terminar compra</a>
        </div>
    </div>
</dialog>

<footer class="footer">
    <div class="container">
        &copy; 2025 - Tecno Core - Num: 8888-8888 Dirección: Calle 123, Ciudad ...
    </div>
</footer>
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<script src="~/js/site.js" asp-append-version="true"></script>
<script>
    function tryDeserializeAlert(jsonStr) {
        try {
            return JSON.parse(jsonStr);
        } catch (e) {
            console.error('Error parsing alert JSON:', e);
            return null;
        }
    }

    // Para alertas dentro de la misma pestaña (e.g., ViewBag)
    @if (ViewBag.Alert != null)
    {
        var alert = ViewBag.Alert as Alert;
        if (alert != null)
        {
            <text>
                document.addEventListener('DOMContentLoaded', function () {
                    showAlert(@Json.Serialize(alert.Message), @Json.Serialize(alert.Type));
                });
            </text>
        }
    }

    // Para alertas donde se realizan redirecciones (e.g., TempData)
    @if (TempData["Alert"] is string alertJson)
    {
        <text>
            document.addEventListener('DOMContentLoaded', function () {
                const alert = tryDeserializeAlert(@Json.Serialize(alertJson));
                if (alert) {
                    showAlert(alert.Message, alert.Type);
                }
            });
        </text>
    }

    @if (TempData["success"] is string successJson)
    {
        <text>
            document.addEventListener('DOMContentLoaded', function () {
                const alert = tryDeserializeAlert(@Json.Serialize(successJson));
                if (alert) {
                    showAlert(alert.Message, alert.Type);
                }
            });
        </text>
    }

    @if (TempData["info"] is string infoJson)
    {
        <text>
            document.addEventListener('DOMContentLoaded', function () {
                const alert = tryDeserializeAlert(@Json.Serialize(infoJson));
                if (alert) {
                    showAlert(alert.Message, alert.Type);
                }
            });
        </text>
    }
</script>
@await RenderSectionAsync("Scripts", false)
</body>
</html>