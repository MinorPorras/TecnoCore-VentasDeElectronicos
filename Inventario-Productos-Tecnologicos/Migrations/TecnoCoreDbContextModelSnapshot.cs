// <auto-generated />
using System;
using Inventario_Productos_Tecnologicos.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Inventario_Productos_Tecnologicos.Migrations
{
    [DbContext(typeof(TecnoCoreDbContext))]
    partial class TecnoCoreDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Inventario_Productos_Tecnologicos.Models.TECO_A_Direccion", b =>
                {
                    b.Property<int>("TN_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TN_Id"));

                    b.Property<bool?>("TB_Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("TC_CodigoPostal")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TC_Direccion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("TN_CantonId")
                        .HasColumnType("int");

                    b.Property<string>("TN_UsuarioId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("TN_Id")
                        .HasName("PK__Direccio__3214EC074E055094");

                    b.HasIndex("TN_CantonId");

                    b.HasIndex("TN_UsuarioId")
                        .IsUnique()
                        .HasFilter("[TN_UsuarioId] IS NOT NULL");

                    b.ToTable("TECO_A_Direccion");
                });

            modelBuilder.Entity("Inventario_Productos_Tecnologicos.Models.TECO_A_Producto", b =>
                {
                    b.Property<int>("TN_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TN_Id"));

                    b.Property<bool>("TB_Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("TB_Novedad")
                        .HasColumnType("bit");

                    b.Property<string>("TC_Descripcion")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("TC_Imagen")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TC_Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("TN_MarcaId")
                        .HasColumnType("int");

                    b.Property<decimal>("TN_Precio")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("TN_Stock")
                        .HasColumnType("int");

                    b.Property<int?>("TN_SubcategoriaId")
                        .HasColumnType("int");

                    b.HasKey("TN_Id")
                        .HasName("PK__Producto__3214EC076A3D152D");

                    b.HasIndex("TN_MarcaId");

                    b.HasIndex("TN_SubcategoriaId");

                    b.ToTable("TECO_A_Producto");
                });

            modelBuilder.Entity("Inventario_Productos_Tecnologicos.Models.TECO_A_Roles", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("TC_RoleId");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TC_ConcurrencyStamp");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("TC_RoleName");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("TC_NormalizedRoleName");

                    b.Property<bool>("TB_Activo")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[TC_NormalizedRoleName] IS NOT NULL");

                    b.ToTable("TECO_A_Role", (string)null);
                });

            modelBuilder.Entity("Inventario_Productos_Tecnologicos.Models.TECO_A_Usuario", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("TC_UserId");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int")
                        .HasColumnName("TN_AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TC_ConcurrencyStamp");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("TC_Email");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit")
                        .HasColumnName("TB_EmailConfirmed");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit")
                        .HasColumnName("TB_LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("TF_LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("TC_NormalizedEmail");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("TC_NormalizedUserName");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TC_PasswordHash");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TC_PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit")
                        .HasColumnName("TB_PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TC_SecurityStamp");

                    b.Property<bool>("TB_Activo")
                        .HasColumnType("bit");

                    b.Property<string>("TC_Apellidos")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TC_Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit")
                        .HasColumnName("TB_TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("TC_UserName");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[TC_NormalizedUserName] IS NOT NULL");

                    b.ToTable("TECO_A_User", (string)null);
                });

            modelBuilder.Entity("Inventario_Productos_Tecnologicos.Models.TECO_M_Canton", b =>
                {
                    b.Property<int>("TN_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TN_Id"));

                    b.Property<string>("TC_Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TN_ProvinciaId")
                        .HasColumnType("int");

                    b.HasKey("TN_Id");

                    b.HasIndex("TN_ProvinciaId");

                    b.ToTable("TECO_M_Canton");
                });

            modelBuilder.Entity("Inventario_Productos_Tecnologicos.Models.TECO_M_Categoria", b =>
                {
                    b.Property<int>("TN_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TN_Id"));

                    b.Property<bool>("TB_Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("TC_Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TN_Id")
                        .HasName("PK__Categori__3214EC07D5CFA9CB");

                    b.ToTable("TECO_M_Categoria");
                });

            modelBuilder.Entity("Inventario_Productos_Tecnologicos.Models.TECO_M_Cupon", b =>
                {
                    b.Property<int>("TN_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TN_Id"));

                    b.Property<bool>("TB_Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("TC_Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TC_Descripcion")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TC_TipoDescuento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("TF_FechaFin")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("TF_FechaInicio")
                        .HasColumnType("datetime");

                    b.Property<int?>("TN_UsosActuales")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int?>("TN_UsosMaximos")
                        .HasColumnType("int");

                    b.Property<decimal>("TN_Valor")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("TN_Id")
                        .HasName("PK__Cupones__3214EC0789F96FE7");

                    b.HasIndex(new[] { "TC_Codigo" }, "UQ__Cupones__06370DACEA3BF6E0")
                        .IsUnique();

                    b.ToTable("TECO_M_Cupon");
                });

            modelBuilder.Entity("Inventario_Productos_Tecnologicos.Models.TECO_M_EstadoPedido", b =>
                {
                    b.Property<int>("TN_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TN_Id"));

                    b.Property<bool?>("TB_Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("TC_NombreEstado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TN_Id")
                        .HasName("PK__EstadosP__3214EC07B7070AF0");

                    b.ToTable("TECO_M_EstadoPedido");
                });

            modelBuilder.Entity("Inventario_Productos_Tecnologicos.Models.TECO_M_Marca", b =>
                {
                    b.Property<int>("TN_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TN_Id"));

                    b.Property<bool>("TB_Activo")
                        .HasColumnType("bit");

                    b.Property<string>("TC_Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TN_Id");

                    b.ToTable("TECO_M_Marca");
                });

            modelBuilder.Entity("Inventario_Productos_Tecnologicos.Models.TECO_M_MetodoPago", b =>
                {
                    b.Property<int>("TN_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TN_Id"));

                    b.Property<bool?>("TB_Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("TB_NombreMetodo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TN_Id")
                        .HasName("PK__MetodosP__3214EC07725674D8");

                    b.ToTable("TECO_M_MetodosPago");
                });

            modelBuilder.Entity("Inventario_Productos_Tecnologicos.Models.TECO_M_Provincia", b =>
                {
                    b.Property<int>("TN_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TN_Id"));

                    b.Property<string>("TC_Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TN_Id");

                    b.ToTable("TECO_M_Provincia");
                });

            modelBuilder.Entity("Inventario_Productos_Tecnologicos.Models.TECO_M_Subcategoria", b =>
                {
                    b.Property<int>("TN_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TN_Id"));

                    b.Property<bool>("TB_Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("TC_Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TN_CategoriaId")
                        .HasColumnType("int");

                    b.HasKey("TN_Id")
                        .HasName("PK__Subcateg__3214EC07A314AFA0");

                    b.HasIndex("TN_CategoriaId");

                    b.ToTable("TECO_M_Subcategoria");
                });

            modelBuilder.Entity("Inventario_Productos_Tecnologicos.Models.TECO_M_TipoMovimientoKardex", b =>
                {
                    b.Property<int>("TN_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TN_Id"));

                    b.Property<bool?>("TB_Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("TB_Entrada")
                        .HasColumnType("bit");

                    b.Property<string>("TC_Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TN_Id")
                        .HasName("PK__TipoMovi__3214EC07F8C6896C");

                    b.ToTable("TECO_M_TipoMovimientoKardex");
                });

            modelBuilder.Entity("Inventario_Productos_Tecnologicos.Models.TECO_P_CarritoCompras", b =>
                {
                    b.Property<string>("TN_UsuarioId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnOrder(0);

                    b.Property<int>("TN_ProductoId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<int>("TN_Cantidad")
                        .HasColumnType("int");

                    b.Property<decimal>("TN_PrecioUnitario")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("TN_UsuarioId", "TN_ProductoId");

                    b.HasIndex("TN_ProductoId");

                    b.ToTable("TECO_P_CarritoCompras");
                });

            modelBuilder.Entity("Inventario_Productos_Tecnologicos.Models.TECO_P_DetallePedido", b =>
                {
                    b.Property<int>("TN_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TN_Id"));

                    b.Property<bool?>("TB_Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int?>("TN_Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("TN_PedidoId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TN_PrecioUnitario")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("TN_ProductoId")
                        .HasColumnType("int");

                    b.HasKey("TN_Id")
                        .HasName("PK__DetalleP__3214EC071DE766D1");

                    b.HasIndex("TN_PedidoId");

                    b.HasIndex("TN_ProductoId");

                    b.ToTable("TECO_P_DetallePedido");
                });

            modelBuilder.Entity("Inventario_Productos_Tecnologicos.Models.TECO_P_Kardex", b =>
                {
                    b.Property<int>("TN_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TN_Id"));

                    b.Property<bool>("TB_Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("TC_Descripcion")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime?>("TF_Fecha")
                        .HasColumnType("datetime");

                    b.Property<int?>("TN_Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("TN_ProductoId")
                        .HasColumnType("int");

                    b.Property<int?>("TN_StockActual")
                        .HasColumnType("int");

                    b.Property<int?>("TN_StockAnterior")
                        .HasColumnType("int");

                    b.Property<int?>("TN_TipoMovimientoId")
                        .HasColumnType("int");

                    b.HasKey("TN_Id")
                        .HasName("PK__KARDEX__3214EC07886BCC24");

                    b.HasIndex("TN_ProductoId");

                    b.HasIndex("TN_TipoMovimientoId");

                    b.ToTable("TECO_P_Kardex");
                });

            modelBuilder.Entity("Inventario_Productos_Tecnologicos.Models.TECO_P_ListaDeseos", b =>
                {
                    b.Property<int>("TN_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TN_Id"));

                    b.Property<bool?>("TB_Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("TF_FechaAgregado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("TN_ProductoId")
                        .HasColumnType("int");

                    b.Property<string>("TN_UsuarioId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("TN_Id")
                        .HasName("PK__ListaDes__3214EC0724A5DC3E");

                    b.HasIndex("TN_ProductoId");

                    b.HasIndex("TN_UsuarioId");

                    b.ToTable("TECO_P_ListaDeseos");
                });

            modelBuilder.Entity("Inventario_Productos_Tecnologicos.Models.TECO_P_Pedido", b =>
                {
                    b.Property<int>("TN_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TN_Id"));

                    b.Property<int?>("CuponId")
                        .HasColumnType("int");

                    b.Property<bool?>("TB_Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("TC_NumTarjeta")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<DateTime?>("TF_Fecha")
                        .HasColumnType("datetime");

                    b.Property<int?>("TN_CuponId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TN_Descuento")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("TN_EstadoPedidoId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TN_Impuesto")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("TN_MetodoPagoId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TN_Subtotal")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("TN_Total")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("TN_TransaccionId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TN_UsuarioId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("TN_Id")
                        .HasName("PK__Pedidos__3214EC074497B4A2");

                    b.HasIndex("CuponId");

                    b.HasIndex("TN_EstadoPedidoId");

                    b.HasIndex("TN_MetodoPagoId");

                    b.HasIndex("TN_UsuarioId");

                    b.ToTable("TECO_P_Pedido");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TN_RoleClaimId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TC_ClaimType");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TC_ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("TC_RoleId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("TECO_M_RoleClaim", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TN_UserClaimId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TC_ClaimType");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TC_ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("TC_UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("TECO_M_UserClaim", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("TC_LoginProvider");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("TC_ProviderKey");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TC_ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("TC_UserId");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("TECO_P_UserLogin", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("TC_UserId");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("TC_RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("TECO_M_UserRole", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("TC_UserId");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("TC_LoginProvider");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("TC_TokenName");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TC_TokenValue");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("TECO_M_UserToken", (string)null);
                });

            modelBuilder.Entity("Inventario_Productos_Tecnologicos.Models.TECO_A_Direccion", b =>
                {
                    b.HasOne("Inventario_Productos_Tecnologicos.Models.TECO_M_Canton", "Canton")
                        .WithMany("Direccion")
                        .HasForeignKey("TN_CantonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inventario_Productos_Tecnologicos.Models.TECO_A_Usuario", "Usuario")
                        .WithOne("Direccion")
                        .HasForeignKey("Inventario_Productos_Tecnologicos.Models.TECO_A_Direccion", "TN_UsuarioId");

                    b.Navigation("Canton");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Inventario_Productos_Tecnologicos.Models.TECO_A_Producto", b =>
                {
                    b.HasOne("Inventario_Productos_Tecnologicos.Models.TECO_M_Marca", "Marca")
                        .WithMany("Productos")
                        .HasForeignKey("TN_MarcaId");

                    b.HasOne("Inventario_Productos_Tecnologicos.Models.TECO_M_Subcategoria", "Subcategoria")
                        .WithMany("Productos")
                        .HasForeignKey("TN_SubcategoriaId");

                    b.Navigation("Marca");

                    b.Navigation("Subcategoria");
                });

            modelBuilder.Entity("Inventario_Productos_Tecnologicos.Models.TECO_M_Canton", b =>
                {
                    b.HasOne("Inventario_Productos_Tecnologicos.Models.TECO_M_Provincia", "Provincia")
                        .WithMany("Canton")
                        .HasForeignKey("TN_ProvinciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("Inventario_Productos_Tecnologicos.Models.TECO_M_Subcategoria", b =>
                {
                    b.HasOne("Inventario_Productos_Tecnologicos.Models.TECO_M_Categoria", "Categoria")
                        .WithMany("Subcategoria")
                        .HasForeignKey("TN_CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("Inventario_Productos_Tecnologicos.Models.TECO_P_CarritoCompras", b =>
                {
                    b.HasOne("Inventario_Productos_Tecnologicos.Models.TECO_A_Producto", "Producto")
                        .WithMany("CarritoCompras")
                        .HasForeignKey("TN_ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inventario_Productos_Tecnologicos.Models.TECO_A_Usuario", "Usuario")
                        .WithMany("CarritoCompras")
                        .HasForeignKey("TN_UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Inventario_Productos_Tecnologicos.Models.TECO_P_DetallePedido", b =>
                {
                    b.HasOne("Inventario_Productos_Tecnologicos.Models.TECO_P_Pedido", "Pedido")
                        .WithMany("DetallePedidos")
                        .HasForeignKey("TN_PedidoId");

                    b.HasOne("Inventario_Productos_Tecnologicos.Models.TECO_A_Producto", "Producto")
                        .WithMany("DetallePedidos")
                        .HasForeignKey("TN_ProductoId");

                    b.Navigation("Pedido");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Inventario_Productos_Tecnologicos.Models.TECO_P_Kardex", b =>
                {
                    b.HasOne("Inventario_Productos_Tecnologicos.Models.TECO_A_Producto", "Producto")
                        .WithMany("Kardex")
                        .HasForeignKey("TN_ProductoId");

                    b.HasOne("Inventario_Productos_Tecnologicos.Models.TECO_M_TipoMovimientoKardex", "TipoMovimientoKardex")
                        .WithMany("Kardex")
                        .HasForeignKey("TN_TipoMovimientoId");

                    b.Navigation("Producto");

                    b.Navigation("TipoMovimientoKardex");
                });

            modelBuilder.Entity("Inventario_Productos_Tecnologicos.Models.TECO_P_ListaDeseos", b =>
                {
                    b.HasOne("Inventario_Productos_Tecnologicos.Models.TECO_A_Producto", "Producto")
                        .WithMany("ListaDeseos")
                        .HasForeignKey("TN_ProductoId");

                    b.HasOne("Inventario_Productos_Tecnologicos.Models.TECO_A_Usuario", "Usuario")
                        .WithMany("ListaDeseos")
                        .HasForeignKey("TN_UsuarioId");

                    b.Navigation("Producto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Inventario_Productos_Tecnologicos.Models.TECO_P_Pedido", b =>
                {
                    b.HasOne("Inventario_Productos_Tecnologicos.Models.TECO_M_Cupon", "Cupon")
                        .WithMany("Pedido")
                        .HasForeignKey("CuponId");

                    b.HasOne("Inventario_Productos_Tecnologicos.Models.TECO_M_EstadoPedido", "EstadoPedido")
                        .WithMany("Pedido")
                        .HasForeignKey("TN_EstadoPedidoId");

                    b.HasOne("Inventario_Productos_Tecnologicos.Models.TECO_M_MetodoPago", "MetodoPago")
                        .WithMany("Pedido")
                        .HasForeignKey("TN_MetodoPagoId");

                    b.HasOne("Inventario_Productos_Tecnologicos.Models.TECO_A_Usuario", "Usuario")
                        .WithMany("Pedido")
                        .HasForeignKey("TN_UsuarioId");

                    b.Navigation("Cupon");

                    b.Navigation("EstadoPedido");

                    b.Navigation("MetodoPago");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Inventario_Productos_Tecnologicos.Models.TECO_A_Roles", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Inventario_Productos_Tecnologicos.Models.TECO_A_Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Inventario_Productos_Tecnologicos.Models.TECO_A_Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Inventario_Productos_Tecnologicos.Models.TECO_A_Roles", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inventario_Productos_Tecnologicos.Models.TECO_A_Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Inventario_Productos_Tecnologicos.Models.TECO_A_Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Inventario_Productos_Tecnologicos.Models.TECO_A_Producto", b =>
                {
                    b.Navigation("CarritoCompras");

                    b.Navigation("DetallePedidos");

                    b.Navigation("Kardex");

                    b.Navigation("ListaDeseos");
                });

            modelBuilder.Entity("Inventario_Productos_Tecnologicos.Models.TECO_A_Usuario", b =>
                {
                    b.Navigation("CarritoCompras");

                    b.Navigation("Direccion");

                    b.Navigation("ListaDeseos");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("Inventario_Productos_Tecnologicos.Models.TECO_M_Canton", b =>
                {
                    b.Navigation("Direccion");
                });

            modelBuilder.Entity("Inventario_Productos_Tecnologicos.Models.TECO_M_Categoria", b =>
                {
                    b.Navigation("Subcategoria");
                });

            modelBuilder.Entity("Inventario_Productos_Tecnologicos.Models.TECO_M_Cupon", b =>
                {
                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("Inventario_Productos_Tecnologicos.Models.TECO_M_EstadoPedido", b =>
                {
                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("Inventario_Productos_Tecnologicos.Models.TECO_M_Marca", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Inventario_Productos_Tecnologicos.Models.TECO_M_MetodoPago", b =>
                {
                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("Inventario_Productos_Tecnologicos.Models.TECO_M_Provincia", b =>
                {
                    b.Navigation("Canton");
                });

            modelBuilder.Entity("Inventario_Productos_Tecnologicos.Models.TECO_M_Subcategoria", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Inventario_Productos_Tecnologicos.Models.TECO_M_TipoMovimientoKardex", b =>
                {
                    b.Navigation("Kardex");
                });

            modelBuilder.Entity("Inventario_Productos_Tecnologicos.Models.TECO_P_Pedido", b =>
                {
                    b.Navigation("DetallePedidos");
                });
#pragma warning restore 612, 618
        }
    }
}
